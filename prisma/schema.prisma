// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String     @id @unique @default(uuid()) @db.Uuid
  email     String     @unique @db.VarChar(100)
  full_name String     @db.VarChar(40)
  username  String     @unique @db.VarChar(15)
  password  String     @db.VarChar(30)
  comments  Comments[]
  likes     Likes[]
  articles  Articles[]
  Roles     Roles?      @relation(fields: [rolesId], references: [id])
  rolesId   String?     @db.Uuid
  updatedAt DateTime   @updatedAt
  createdAt DateTime   @default(now())
}

model Comments {
  id           String     @id @unique @default(uuid()) @db.Uuid
  likes        Likes[]
  comment_text String
  Users        Users?     @relation(fields: [usersId], references: [id])
  usersId      String?    @db.Uuid
  updatedAt    DateTime   @updatedAt
  createdAt    DateTime   @default(now())
  articles     Articles   @relation(fields: [articlesId], references: [id])
  articlesId   String     @db.Uuid
}

model Roles {
  id                String   @id @unique @default(uuid()) @db.Uuid
  name              String   @unique @db.VarChar(20)
  articles_creation Boolean  @default(false)
  admin_privileges  Boolean  @default(false)
  Users             Users[]
  updatedAt         DateTime @updatedAt
  createdAt         DateTime @default(now())
}

model Likes {
  id         Int       @unique @default(autoincrement())
  users      Users?    @relation(fields: [usersId], references: [id])
  usersId    String?   @db.Uuid
  Comments   Comments? @relation(fields: [commentsId], references: [id])
  commentsId String?   @db.Uuid
  createdAt  DateTime  @default(now())
  articles   Articles[]
}

model Articles{
  id        String     @id @db.Uuid @unique @default(uuid())
  users     Users      @relation(fields: [usersId], references: [id])
  usersId   String     @db.Uuid
  usersName String
  content   String     @db.VarChar(200)
  likes     Likes?      @relation(fields: [likesId], references: [id])
  likesId   Int?
  comments  Comments[]
  createdAt DateTime   @default(now())
}